;RO AND R1 ARE USED TO ACCESS THE POOLS
;R3 IS THE ITEM WE ARE SEARCHING IN THE PRICE LIST
;R4 FIRST, R5 MIDDLE, R6 LAST
;R7 IS THE MIDDLE INDEX TO COMPUTE IF IT'S ODD OR EVEN, R8 IS THE MIDDLE INDEX * 4 TO ACCESS THE POOL IN THAT POSITION
;R9 IS THE NUMBER FOUND AD MIDDLE INDEX (R8)
;R10 IS THE AMOUNT OF EXPANSE
;R11 IS THE PRICE OF THE ITEM
;R12 IS THE QUANTITY I WANNA BUY



		AREA reset, CODE, READWRITE	

		ENTRY

		B reset_handler	 

Price_list 	DCD 0x004, 20, 0x006, 15, 0x007, 10, 0x00A, 5, 0x010, 8	 		;Code and price
     		DCD 0x012, 7, 0x016, 22, 0x017, 17, 0x018, 38, 0x01A, 22
			
Item_list 	DCD 0x006, 1, 0x017, 2, 0x01A, 3	 							;Code and quantity

reset_handler

		LDR R0, =Price_list			;initialize R0
		LDR R1, =Item_list 			;initialize R1


loop_outer

		CMP R2, #3 			;TOTAL NUMBER OF ITEM
		BEQ end

		LDR R3, [R1], #4 	;FIRST ITEM IN THE ITEM_LIST AND INCREMENT OF 4 THE INDEX OF THE POOL
		LDR R4, =0 			;FIRST
		LDR R5, =19			;LAST = TOTAL - 1 = 19
		LDR R6, =0;			;INDEX
		B loop_inner	  	


loop_inner
		
		CMP R4, R5			   
		BLT continue
		LDREQ R10, =0		 ;IF THEY ARE EQUAL MEANS THAT I HAVEN'T FOUND A CORRISPONDENCE IN THE PRICE_LIST
		BEQ end				 ;SO I SET R10 = 0 AND I END THE PROGRAM

continue

		LDR R0, =Price_list	 ;RE-initialize R0
		LDR R7, =0
		LDR R8, =0

		ADD R7, R4, R5		 ;R7 = FIRST + LAST
		LSR  R7, R7, #1		 ;FIRST DIVIDE BY 2, R7 IS MIDDLE EXPRESSED WITHOUT THE MUL
		LSL R8, R7, #2 		 ;R8 IS MIDDLE*4 TO ACCESS THE INDEX (i do the two operations separately cause i need both r7 and r8)
		
		;I NEED TO CHECK IF R7 IS ODD OR EVEN CAUSE FROM THIS DEPENDS THE BEHAVIOUR OF THE PROGRAM, NEED TO RUN TO UNDERSTAND
		;BUT IT DEPENDS FROM THE FACTS THAT 19/2 IS 9 AND NOT 9.5
		AND	R9, R7, #0x01	 ;IF R9 = 1 --> R7 IS ODD, ELSE IS EVEN
		CMP R9, #1 		  	 
		SUBEQ R8, R8, #4	 ;I SUBTRACT 4 IN ORDER TO READ THE CODE AND NOT THE PRICE
		
		LDR R9, [R0], R8 	 ;R9 here is USELESS, JUST TO MOVE TO R8 POSITION
		LDR R9, [R0], #4  	 ;R9 = TABLE[MIDDLE]; MOVE OF 4 TO READ THE COST ASSOCIATED

		CMP R3, R9			 ;R3 FIRST ITEM ON ITEM LIST, R9 MIDDLE ITEM ON PRICE LIST
		MOVEQ R6, R7 		 ;IF EQUAL --> INDEX = MIDDLE
		SUBLT R5, R7, #1  	 ;IF R3 < R9 LAST=MIDDLE-1 
		ADDGT R4, R7, #1	 ;IF R3 > R9 FIRST=MIDDLE+1

		BGT loop_inner		 ;IF THEY ARE DIFFERENT I RESTART THE CYCLE
		BLT loop_inner

		;IF THEY ARE EQUAL I FOUND THE CODE AND I COMPUTE THE TOTAL AMOUNT
		STMFD SP!, {R3}		 ;PUSH THE BALUE OF R3 TO COMPUTE THE MUL
		LDR R11, [R0], #0 	 ;PRICE OF THE ITEM
		LDR R12, [R1], #4	 ;QUANTITY I WANNA BUY
		MUL R3, R11, R12	 ;PRICE x QUANTITY
		ADD R10, R10, R3	 ;ADD TO R10
		ADD R2, R2, #1		 ;INCREASE THE COUNTER FOR THE OUTER LOOP
		LDMFD SP!, {R3}

		B loop_outer	    ;BREAK
			

end
		B reset_handler
		END

	
		